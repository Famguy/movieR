{
    "contents" : "library(ggvis)\n\ndf <- read.table(\"filmfare_mod.tsv\", header = FALSE, sep=\"\\t\")\ntitles <- df$V1\nyear <- df$V2\nratings <- df$V3\nmins <- df$V4\ndirectors <- df$V5\nactors <- df$V6\n\nmakexy <- function (inp) {\n  dft <- cbind(inp,x=0,y=0)\n  dft$x <- as.numeric(dft$x)\n  dft$y <- as.numeric(dft$y)\n  for (n in (1:nrow(dft))){\n    quo <- (n-1)%/%5\n    rem <- (n-1)%%5\n    dft$x[n] <- rem\n    dft$y[n] <- quo\n  }\n  dft$x <- as.factor(dft$x)\n  dft$y <- as.factor(dft$y)\n  return(dft)\n}\n\n\n# Creating data for distribution of mins\ndfm <- df\ndfm$names <- paste0(titles,\";\",year)\ncolnames(dfm)[4] <- \"values\"\ndfm1 <- makexy(dfm[dfm$values<130,])\ndfm2 <- dfm[dfm$values>=130,]\ndfm2 <- makexy(dfm2[dfm2$values<160,])\ndfm3 <- dfm[dfm$values<190,]\ndfm3 <- makexy(dfm3[dfm3$values>=160,])\ndfm4 <- makexy(dfm[dfm$values>=190,])\n\n# Creating data for distribution of ratings\ndfr <- df\ndfr$names <- paste0(titles,\";\",year)\ncolnames(dfr)[3] <- \"values\"\ndfr1 <- makexy(dfr[dfr$values<=7,])\ndfr2 <- dfr[dfr$values>7,]\ndfr2 <- makexy(dfr2[dfr2$values<=8,])\ndfr3 <- dfr[dfr$values>8,]\ndfr3 <- makexy(dfr3[dfr3$values<8.4,])\ndfr4 <- makexy(dfr[dfr$value>=8.4,])\n\n# Creating data for frequency distribution of directors\ntd <- table(directors)\ndfd <- as.data.frame(td)\ncolnames(dfd)[1] <- \"names\"\ndfd$movies <- c(\" \")\nfor (i in 1:nrow(dfd)) {\n   dname <- dfd[i, ]$names\n#   print (dname)\n   tpd <- paste0(df[df$V5 == dname,]$V1, \" (\",df[df$V5 == dname,]$V2, \")<br>\" , collapse= '')\n   dfd[i, ]['movies'] <- substr(tpd,1,nchar(tpd)-4)\n#   print(df[i, ]['V1'])\n}\ndfd$names <- paste0(dfd$names,\";\",dfd$movies) \n\n# Various plots\ndfd1 <- makexy(dfd[dfd$Freq==1,])\ndfd2 <- makexy(dfd[dfd$Freq==2,])\ndfd3 <- makexy(dfd[dfd$Freq>=3,])\n\n\n# Creating data for frequency distribution of cast\nnames <- c()\nfor (i in 1:length(actors)){\n  act <- toString(actors[i])\n  temp <- as.vector(strsplit(act, \", \")[[1]])\n  names <- c(names, temp)\n}\n\ntc <- table(names)\ndft <- as.data.frame(tc)\n\ndft$movies <- c(\" \")\nfor (i in 1:nrow(dft)) {\n  aname <- dft[i, ]$names\n  tpd <- paste0(df[grepl(aname,df$V6),]$V1, \" (\",df[grepl(aname,df$V6),]$V2, \")<br>\" , collapse= '')\n  dft[i, ]['movies'] <- substr(tpd,1,nchar(tpd)-4)\n  #   print(df[i, ]['V1'])\n}\ndft$names <- paste0(dft$names,\";\",dft$movies) \n\n\n# Various plots\ndft1 <- makexy(dft[dft$Freq==1,])\ndft2 <- makexy(dft[dft$Freq==2,])\ndft3 <- makexy(dft[dft$Freq==3,])\ndft4 <- makexy(dft[dft$Freq>=4,])\n\nplotter <- function(inp,m,n){\n  effvis <- (\n    inp %>% \n    ggvis(~x, ~y, fill = ~Freq, key := ~names, fill.hover := \"magenta\") %>% \n    layer_rects(width = band(), height = band()) %>% \n    scale_nominal(\"x\", padding = 0, points = FALSE) %>% \n    scale_nominal(\"y\", padding = 0, points = FALSE) %>% \n    add_tooltip(function(data){\n      paste0(\"Name: \",as.character(strsplit(data$names, \";\")[[1]][1]),\"<br> Movies: \", as.character(strsplit(data$names, \";\")[[1]][2]), \"<br> Times Won: \", as.character(data$Freq), \"<br>\")\n    }, \"hover\") %>% \n    hide_axis(\"x\") %>% hide_axis(\"y\")) %>% hide_legend(\"fill\") %>%\n    set_options(height = 300*m, width = 300*n)\n#     dft %>%\n#     ggvis(~x, ~y, size := ~Freq*100, size.hover:= ~Freq*200, fill = ~Freq, key := ~names, fill.hover := \"magenta\") %>%\n#     layer_points() %>%\n#     add_tooltip(function(data){\n#     paste0(\"Name: \", as.character(data$names), \"<br> Freq: \", as.character(data$Freq), \"<br>\")\n#     }, \"hover\") %>% \n#     hide_axis(\"x\") %>% hide_axis(\"y\")) %>% hide_legend(\"fill\")  \n    \n  return (effvis)\n}\n\naltplotter <- function(inp,m,n){\n  effvis <- (\n    inp %>% \n      ggvis(~x, ~y, fill = ~values, key := ~names, fill.hover := \"magenta\") %>% \n      layer_rects(width = band(), height = band()) %>% \n      scale_nominal(\"x\", padding = 0, points = FALSE) %>% \n      scale_nominal(\"y\", padding = 0, points = FALSE) %>% \n      add_tooltip(function(data){\n        paste0(\"Name: \",as.character(strsplit(data$names, \";\")[[1]][1]),\"<br> Year: \", as.character(strsplit(data$names, \";\")[[1]][2]), \"<br> Value: \", as.character(data$values), \"<br>\")\n      }, \"hover\") %>% \n      hide_axis(\"x\") %>% hide_axis(\"y\")) %>% hide_legend(\"fill\") %>%\n    set_options(height = 300*m, width = 300*n)\n  return (effvis)\n}\n\n\nnullplotter <- function(){\n  dftnull <- data.frame(x= numeric(0), y= numeric(0))\n  effvis <- (dftnull %>% \n    ggvis(~x, ~y) %>% hide_axis(\"x\") %>% hide_axis(\"y\") %>% \n    set_options(height = 1, width = 1))\n  return (effvis)\n}\n\n# d <- density(mins)\n# plot(d, type=\"n\", main=\"mins\")\n# polygon(d, col=\"red\", border=\"gray\")\n# \n# hist(mins, xlim=c(50, 250), breaks=seq(50, 250, 11), main=\"Minutes\", probability=TRUE, col=\"gray\", border=\"white\")\n# d <- density(mins)\n# lines(d, col=\"red\")\n\nplotType <- function(type) {\n  if (type == \"Length\"){\n    hist(mins, xlim=c(50, 250), breaks=seq(50, 250, 11), main=\"Minutes\", probability=TRUE, col=\"gray\", border=\"white\")\n    d <- density(mins)\n    lines(d, col=\"red\")\n    print(mean(mins))\n  }\n  else if (type == \"Rating\"){\n    hist(ratings, xlim=c(6, 10), breaks=seq(6, 10, 0.25), main=\"Ratings\", probability=TRUE, col=\"gray\", border=\"white\")\n    d <- density(ratings)\n    lines(d, col=\"red\")\n    print(mean(ratings))\n  }\n#   else if (type == \"Director\"){\n#     barplot(table(directors))\n#   }\n  else {\n    return (NULL)\n  }\n}\n\ntimeplot <- function(type){\n  if (type == \"Length\"){\n    plot(year, mins, type=\"o\")\n#    lines(year, mins)\n  }\n  else if (type == \"Rating\"){\n    plot(year, ratings, type=\"o\")\n#    lines(year, ratings)\n  }\n  else {\n    return (NULL)\n  }\n}  \n",
    "created" : 1455440558481.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3980353704",
    "id" : "6B510EEE",
    "lastKnownWriteTime" : 1456039682,
    "path" : "~/GITHUB/movieR/filmfareapp/helpers.R",
    "project_path" : "filmfareapp/helpers.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}